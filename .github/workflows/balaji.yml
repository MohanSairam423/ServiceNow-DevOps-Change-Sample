# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Maven Package

on: workflow_dispatch
  # release:
  #   types: [created]

jobs:

  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Build with Maven
      run: mvn -B package --file pom.xml

  create-change:
    runs-on: ubuntu-latest
    name: 'ServiceNow DevOps Change Automation'
    needs: build

    steps:
    - name: ServiceNow DevOps Change Automation
      uses: ServiceNow/servicenow-devops-change@v4.0.0
      with:
        instance-url: ${{ secrets.SN_INSTANCE_URL }}
        devops-integration-token: ${{ secrets.SN_DEVOPS_TOKEN }}
        tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
        job-name: 'ServiceNow DevOps Change Automation'
        context-github: ${{ toJSON(github) }}
        timeout: '3600'
        interval: '100'
        # The customized inputs to create change with the requested details.
        change-request: '{"setCloseCode": "true","autoCloseChange": true,"attributes": {"chg_model":{"name":"DevOps"},"short_description": "GitHub - (load-testing)","description": "GitHub Automated Software Deployment.","assignment_group": "1b0a5c60ff8c9610c648fe258c4fd956","assigned_to" :{"name": "Abraham Lincoln"},"work_notes": "Check out this awesome CR","implementation_plan": "Software update is tested and results can befound in Test Summaries Tab","backout_plan": "When software fails in production, the previous software release will be re-deployed.","test_plan": "Testing if the software was successfully deployed"}}'
        # The max. time in seconds to wait until change created.
        changeCreationTimeOut: '3600'
  # change:
  #   # jobs that must complete successfully before this job will run
  #   needs: registerPackage
  #   # type of machine to run the job on
  #   runs-on: ubuntu-latest
  #   name: 'ServiceNow DevOps Change Automation'
  #   outputs:
  #     changeRequestNumber: ${{ steps.create_change.outputs.change-request-number }}
  #     changeRequestSysId: ${{ steps.create_change.outputs.change-request-sys-id }}
  #   steps:
  #     - name: ServiceNow Change
  #       id: create_change
  #       uses: ServiceNow/servicenow-devops-change@v4.0.0
  #       with:
  #         # Devops Integration Token
  #         devops-integration-token: ${{ secrets.SN_DEVOPS_TOKEN }}
  #         # ServiceNow Instance URL
  #         instance-url: ${{ secrets.SN_INSTANCE_URL }}
  #         # Orchestration Tool Id
  #         tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
  #         # GitHub Context
  #         context-github: ${{ toJSON(github) }}
  #         # Display Name of the Job
  #         job-name: 'ServiceNow DevOps Change Automation'
  #         change-request: '{"setCloseCode": "true","autoCloseChange": true,"attributes": {"short_description": "GitHub - (load-testing)","description": "GitHub Automated Software Deployment.","assigned_to" :{"name": "Abraham Lincoln"},"work_notes": "Check out this awesome CR","implementation_plan": "Software update is tested and results can befound in Test Summaries Tab","backout_plan": "When software fails in production, the previous software release will be re-deployed.","test_plan": "Testing if the software was successfully deployed", "chg_model":{"name":"DevOps"}}}'
  #         #change-request: '{"attributes":{"type":"normal"}}'
  #         # You can specify the requested_by attribute either with name or sys_id. Example: "requested_by":{"name": "Test User"} or "requested_by": "62826bf03710200044e0bfc8bcbe5df1"
  #         # You can specify the assignment_group attribute either with name or sys_id. Example: "assignment_group":{"name": "Change Approval Team"} or "assignment_group": "5f721d93c0a8010e015533746de18bf9"
  #         # start_date: Enter the planned start date
  #         # end_date: Enter the planned end date
  #         #deployment-gate: '{"environment":"env_deployment_gates","jobName":"ServiceNow DevOps Get Change"}'
  #         abortOnChangeCreationFailure: false
  #         interval: 100
  #         timeout:
  #         changeCreationTimeOut:
  #     - name: Output of ServiceNow DevOps Change Automation
  #       run: |
  #         echo 'Output of ServiceNow DevOps Change Automation is change-request-number = ${{ steps.create_change.outputs.change-request-number }}' >> $GITHUB_OUTPUT
  #         echo 'Output of ServiceNow DevOps Change Automation is change-request-sys-id = ${{ steps.create_change.outputs.change-request-sys-id }}' >> $GITHUB_OUTPUT  
          
  publish-package:
    runs-on: ubuntu-latest
    needs: create-change

    steps:
      - name: Publish to GitHub Packages Apache Maven
        run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml
        env:
          GITHUB_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}
